@model FileManager.ViewModels.SettingsViewModel

@{

    Layout.Title = T("Settings").ToString();
}

@using (Html.BeginFormAntiForgeryPost())
{ 
    @Html.ValidationSummary()
<fieldset>
    <legend>@T("Media")</legend>
    <div>
        @Html.LabelFor(m => m.PictureExtensions, T("Images allowed file types (list of extensions separated by spaces)")) 
        @Html.TextBoxFor(m => m.PictureExtensions, new { @class = "textMedium" }) 
    </div>
    <div>
        @Html.LabelFor(m => m.DocumentsExtensions, T("Documents allowed file types (list of extensions separated by spaces)")) 
        @Html.TextBoxFor(m => m.DocumentsExtensions, new { @class = "textMedium" }) 
    </div>
    <div>
        @Html.LabelFor(m => m.VideoExtensions, T("Video allowed file types (list of extensions separated by spaces)")) 
        @Html.TextBoxFor(m => m.VideoExtensions, new { @class = "textMedium" }) 
    </div>
    <div>
        @Html.LabelFor(m => m.UploadAllowedFileTypeWhitelist, T("Upload allowed file types (list of extensions separated by spaces)")) 
        @Html.TextBoxFor(m => m.UploadAllowedFileTypeWhitelist, new { @class = "textMedium" }) 
    </div>
</fieldset>

<fieldset>
    <button class="primaryAction" type="submit" name="submit.Save" value="yes" >@T("Save")</button>
    <button class="primaryAction" type="submit" name="submit.Refresh" value="yes" >@T("Actualize Files / Foldes from disk")</button>
 </fieldset>
}